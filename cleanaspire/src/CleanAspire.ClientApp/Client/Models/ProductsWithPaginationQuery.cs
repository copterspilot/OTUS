// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CleanAspire.Api.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProductsWithPaginationQuery : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cacheKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CacheKey { get; set; }
#nullable restore
#else
        public string CacheKey { get; set; }
#endif
        /// <summary>The keywords property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Keywords { get; set; }
#nullable restore
#else
        public string Keywords { get; set; }
#endif
        /// <summary>The orderBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderBy { get; set; }
#nullable restore
#else
        public string OrderBy { get; set; }
#endif
        /// <summary>The pageNumber property</summary>
        public int? PageNumber { get; set; }
        /// <summary>The pageSize property</summary>
        public int? PageSize { get; set; }
        /// <summary>The sortDirection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SortDirection { get; set; }
#nullable restore
#else
        public string SortDirection { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CleanAspire.Api.Client.Models.ProductsWithPaginationQuery"/> and sets the default values.
        /// </summary>
        public ProductsWithPaginationQuery()
        {
            AdditionalData = new Dictionary<string, object>();
            OrderBy = "Id";
            SortDirection = "Descending";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CleanAspire.Api.Client.Models.ProductsWithPaginationQuery"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CleanAspire.Api.Client.Models.ProductsWithPaginationQuery CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CleanAspire.Api.Client.Models.ProductsWithPaginationQuery();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cacheKey", n => { CacheKey = n.GetStringValue(); } },
                { "keywords", n => { Keywords = n.GetStringValue(); } },
                { "orderBy", n => { OrderBy = n.GetStringValue(); } },
                { "pageNumber", n => { PageNumber = n.GetIntValue(); } },
                { "pageSize", n => { PageSize = n.GetIntValue(); } },
                { "sortDirection", n => { SortDirection = n.GetStringValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cacheKey", CacheKey);
            writer.WriteStringValue("keywords", Keywords);
            writer.WriteStringValue("orderBy", OrderBy);
            writer.WriteIntValue("pageNumber", PageNumber);
            writer.WriteIntValue("pageSize", PageSize);
            writer.WriteStringValue("sortDirection", SortDirection);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
